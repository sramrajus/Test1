name: Build and deploy container to an Azure Container App

env:
  AZURE_CONTAINER_APP_NAME_TEST: acapp-test
  AZURE_CONTAINER_APP_NAME_PROD: acapp-prod
  AZURE_CONTAINER_APP_RG_NAME: acapp-rg
  ACR_LOGIN_SERVER: acracapp.azurecr.io
  IMAGEREPO: fastapipyacapp

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Self Checkout  
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Azure container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push container image to Azure container registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGEREPO }}:${{ github.sha }}
          file: ./app/Dockerfile

  DeployTest:
    runs-on: ubuntu-latest
    name: Deploy to Test
    needs: Build
    environment:
      name: 'TestEnvironment'
      url: ${{ steps.deploy-to-test-containerapp.outputs.app-url }}

    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure container App via Azure CLI
        id: deploy-to-test-containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ env.AZURE_CONTAINER_APP_NAME_TEST }} -g ${{ env.AZURE_CONTAINER_APP_RG_NAME }} --server ${{ env.ACR_LOGIN_SERVER }} --username  ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}
            echo "Starting Deploying"
            az containerapp update -n ${{ env.AZURE_CONTAINER_APP_NAME_TEST }} -g ${{ env.AZURE_CONTAINER_APP_RG_NAME }} --image ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGEREPO }}:${{ github.sha }}
  DeployProd:
    runs-on: ubuntu-latest
    name: Deploy to Prod
    needs: DeployTest
    environment:
      name: 'ProdEnvironment'
      url: ${{ steps.deploy-to--prod-containerapp.outputs.app-url }}

    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure container App via Azure CLI
        id: deploy-to--prod-containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ env.AZURE_CONTAINER_APP_NAME_PROD }} -g ${{ env.AZURE_CONTAINER_APP_RG_NAME }} --server ${{ env.ACR_LOGIN_SERVER }} --username  ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}
            echo "Starting Deploying"
            az containerapp update -n ${{ env.AZURE_CONTAINER_APP_NAME_PROD }} -g ${{ env.AZURE_CONTAINER_APP_RG_NAME }} --image ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGEREPO }}:${{ github.sha }}
